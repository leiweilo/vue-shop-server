{"version":3,"file":"js/Cate_Params.13754cd1.js","mappings":"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","sources":["webpack://vue-shop/./src/components/goods/Cate.vue","webpack://vue-shop/src/components/goods/Cate.vue","webpack://vue-shop/./src/components/goods/Cate.vue?7e22","webpack://vue-shop/./src/components/goods/Cate.vue?980e","webpack://vue-shop/./src/components/goods/Params.vue","webpack://vue-shop/src/components/goods/Params.vue","webpack://vue-shop/./src/components/goods/Params.vue?9d53","webpack://vue-shop/./src/components/goods/Params.vue?9d3d"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"商品分类\")])],1),_c('el-card',[_c('el-row',[_c('el-col',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.showAddCateDialog}},[_vm._v(\"添加分类\")])],1)],1),_c('tree-table',{staticClass:\"treeTable\",attrs:{\"data\":_vm.catelist,\"columns\":_vm.columns,\"selection-type\":false,\"expand-type\":false,\"show-index\":\"\",\"index-text\":\"#\",\"border\":\"\",\"show-row-hover\":true},scopedSlots:_vm._u([{key:\"isok\",fn:function(scope){return [(scope.row.cat_deleted === false)?_c('i',{staticClass:\"el-icon-success\",staticStyle:{\"color\":\"lightgreen\"}}):_c('i',{staticClass:\"el-icon-error\",staticStyle:{\"color\":\"red\"}})]}},{key:\"order\",fn:function(scope){return [(scope.row.cat_level===0)?_c('el-tag',{attrs:{\"size\":\"mini\"}},[_vm._v(\"一级\")]):(scope.row.cat_level===1)?_c('el-tag',{attrs:{\"type\":\"success\",\"size\":\"mini\"}},[_vm._v(\"二级\")]):_c('el-tag',{attrs:{\"type\":\"warning\",\"size\":\"mini\"}},[_vm._v(\"三级\")])]}}])},[_c('template',{slot:\"opt\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"mini\"}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"}},[_vm._v(\"删除\")])],1)],2),_c('el-pagination',{attrs:{\"current-page\":_vm.querInfo.pagenum,\"page-sizes\":[3, 5, 10, 15],\"page-size\":_vm.querInfo.pagesize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1),_c('el-dialog',{attrs:{\"title\":\"添加分类\",\"visible\":_vm.addCateDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addCateDialogVisible=$event},\"close\":_vm.addCateDialogClosed}},[_c('el-form',{ref:\"addCateFormRef\",attrs:{\"model\":_vm.addCateForm,\"rules\":_vm.addCateFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称：\",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.addCateForm.cat_name),callback:function ($$v) {_vm.$set(_vm.addCateForm, \"cat_name\", $$v)},expression:\"addCateForm.cat_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"父级分类：\"}},[_c('el-cascader',{attrs:{\"expand-trigger\":\"hover\",\"options\":_vm.parentCateList,\"props\":_vm.cascaderProps,\"clearable\":\"\",\"change-on-select\":\"\"},on:{\"change\":_vm.parentCateChanged},model:{value:(_vm.selectedKeys),callback:function ($$v) {_vm.selectedKeys=$$v},expression:\"selectedKeys\"}})],1),_c('span',[_vm._v(\"不选默认为一级分类\")])],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addCateDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addCate}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 面包屑导航区 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <!-- 一行 -->\r\n      <el-row>\r\n        <!-- 一列 -->\r\n        <el-col>\r\n          <el-button type=\"primary\" @click=\"showAddCateDialog\">添加分类</el-button>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- 树形表格，并不是饿了么的组件，是第三方组件 vue-table-with-tree-grid -->\r\n      <tree-table\r\n        class=\"treeTable\"\r\n        :data=\"catelist\"\r\n        :columns=\"columns\"\r\n        :selection-type=\"false\"\r\n        :expand-type=\"false\"\r\n        show-index\r\n        index-text=\"#\"\r\n        border\r\n        :show-row-hover=\"true\">\r\n        <!-- 是否有效 不能使用 v-slot，或者用下一个模板的方法-->\r\n        <template slot=\"isok\" slot-scope=\"scope\">\r\n          <i class=\"el-icon-success\" v-if=\"scope.row.cat_deleted === false\" style=\"color: lightgreen;\">\r\n          </i>\r\n          <i class=\"el-icon-error\" v-else style=\"color: red;\">\r\n          </i>\r\n        </template>\r\n        <!-- 排序 -->\r\n        <template v-slot:order=\"scope\">\r\n          <el-tag size=\"mini\" v-if=\"scope.row.cat_level===0\">一级</el-tag>\r\n          <el-tag type=\"success\" size=\"mini\" v-else-if=\"scope.row.cat_level===1\">二级</el-tag>\r\n          <el-tag type=\"warning\" size=\"mini\" v-else>三级</el-tag>\r\n        </template>\r\n        <!-- 操作 -->\r\n        <template slot=\"opt\">\r\n          <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\">编辑</el-button>\r\n          <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\">删除</el-button>\r\n        </template>\r\n      </tree-table>\r\n      <!-- 分页区域 -->\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"querInfo.pagenum\"\r\n        :page-sizes=\"[3, 5, 10, 15]\"\r\n        :page-size=\"querInfo.pagesize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\">\r\n      </el-pagination>\r\n    </el-card>\r\n\r\n    <!-- 添加分类的对话框 -->\r\n    <el-dialog title=\"添加分类\" :visible.sync=\"addCateDialogVisible\" width=\"50%\" @close=\"addCateDialogClosed\">\r\n      <!-- 添加分类的表单 -->\r\n      <el-form :model=\"addCateForm\" :rules=\"addCateFormRules\" ref=\"addCateFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"分类名称：\" prop=\"cat_name\">\r\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"父级分类：\">\r\n          <!-- options 用来指定数据源 -->\r\n          <!-- props 用来指定配置对象 -->\r\n          <el-cascader\r\n              expand-trigger=\"hover\"\r\n              :options=\"parentCateList\"\r\n              :props=\"cascaderProps\"\r\n              v-model=\"selectedKeys\"\r\n              @change=\"parentCateChanged\"\r\n              clearable\r\n              change-on-select>\r\n          </el-cascader>\r\n        </el-form-item>\r\n        <span>不选默认为一级分类</span>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Cate.vue\",\r\n  data() {\r\n    return {\r\n      // 查询条件\r\n      querInfo: {\r\n        type: 3,\r\n        pagenum: 1,\r\n        pagesize: 5\r\n      },\r\n      // 商品分类的数据列表，默认为空\r\n      catelist: [],\r\n      // 总数据条数\r\n      total: 0,\r\n      // 为table指定列的定义\r\n      columns: [\r\n        {\r\n          label: '分类名称',\r\n          prop: 'cat_name'\r\n        },\r\n        {\r\n          label: '是否有效',\r\n          // 表示，将当前列定义为模板列\r\n          type: 'template',\r\n          // 表示当前这一列使用模板名称\r\n          template: 'isok'\r\n        },\r\n        {\r\n          label: '排序',\r\n          // 表示，将当前列定义为模板列\r\n          type: 'template',\r\n          // 表示当前这一列使用模板名称\r\n          template: 'order'\r\n        },\r\n        {\r\n          label: '操作',\r\n          // 表示，将当前列定义为模板列\r\n          type: 'template',\r\n          // 表示当前这一列使用模板名称\r\n          template: 'opt'\r\n        }\r\n      ],\r\n      // 控制添加分类对话框的显示与隐藏\r\n      addCateDialogVisible: false,\r\n      // 添加分类的表单数据对象\r\n      addCateForm: {\r\n        // 将要添加的分类的名称\r\n        cat_name: '',\r\n        // 父级分类的Id\r\n        cat_pid: 0,\r\n        // 分类的等级，默认要添加的是1级分类\r\n        cat_level: 0\r\n      },\r\n      // 添加分类表单的验证规则对象\r\n      addCateFormRules: {\r\n        cat_name: [\r\n          { required: true, message: '请输入分类名称', trigger: 'blur' }\r\n        ]\r\n      },\r\n      // 父级分类的列表\r\n      parentCateList: [],\r\n      // 指定级联选择器的配置对象\r\n      cascaderProps: {\r\n        value: 'cat_id',\r\n        label: 'cat_name',\r\n        children: 'children'\r\n      },\r\n      // 选中的父级分类的id数组，必须使用数组，因为选中多级后，需要存储选中的每一级的id\r\n      selectedKeys: []\r\n    }\r\n  },\r\n  created() {\r\n    this.getCateList()\r\n  },\r\n  methods: {\r\n    // 获取商品分类数据\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get('categories', {\r\n        params: this.querInfo\r\n      })\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取商品分类失败！')\r\n      }\r\n      // 把数据列表赋值给 catelist\r\n      this.catelist = res.data.result\r\n      // 为总的数据条数赋值\r\n      this.total = res.data.total\r\n    },\r\n    // 监听 pagesize 改变\r\n    handleSizeChange(newSize) {\r\n      this.querInfo.pagesize = newSize\r\n      this.getCateList()\r\n    },\r\n    // 监听 pagenum 改变\r\n    handleCurrentChange(newPage) {\r\n      this.querInfo.pagenum = newPage\r\n      this.getCateList()\r\n    },\r\n    // 点击按钮，展示添加分类的对话框\r\n    showAddCateDialog() {\r\n      // 先获取父级分类的数据列表\r\n      this.getParentCateList()\r\n      // 再展示出对话框\r\n      this.addCateDialogVisible = true\r\n    },\r\n    // 获取父级分类的数据列表\r\n    async getParentCateList() {\r\n      const { data: res } = await this.$http.get('categories', {\r\n        params: { type: 2 }\r\n      })\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取父级分类数据失败！')\r\n      }\r\n      this.parentCateList = res.data\r\n    },\r\n    // 选择项发生变化触发这个函数\r\n    parentCateChanged() {\r\n      console.log(this.selectedKeys)\r\n      // 如果 selectedKeys 数组中的 length 大于0，证明选中的父级分类\r\n      // 反之，就说明没有选中任何父级分类\r\n      if (this.selectedKeys.length > 0) {\r\n        // 父级分类的Id\r\n        this.addCateForm.cat_pid = this.selectedKeys[this.selectedKeys.length - 1]\r\n        // 为当前分类的等级赋值\r\n        this.addCateForm.cat_level = this.selectedKeys.length\r\n        // return\r\n      } else {\r\n        // 父级分类的Id\r\n        this.addCateForm.cat_pid = 0\r\n        // 为当前分类的等级赋值\r\n        this.addCateForm.cat_level = 0\r\n      }\r\n    },\r\n    // 点击按钮，添加新的分类\r\n    addCate() {\r\n      this.$refs.addCateFormRef.validate(async valid => {\r\n        if (!valid) return\r\n        const { data: res } = await this.$http.post(\r\n            'categories',\r\n            this.addCateForm\r\n        )\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error('添加分类失败！')\r\n        }\r\n        this.$message.success('添加分类成功！')\r\n        this.getCateList()\r\n        this.addCateDialogVisible = false\r\n      })\r\n    },\r\n    // 监听对话框的关闭事件，重置表单数据\r\n    addCateDialogClosed() {\r\n      this.$refs.addCateFormRef.resetFields()\r\n      this.selectedKeys = []\r\n      this.addCateForm.cat_level = 0\r\n      this.addCateForm.cat_pid = 0\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.treeTable {\r\n  margin-top: 15px;\r\n}\r\n\r\n.el-cascader {\r\n  width: 100%;\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Cate.vue?vue&type=template&id=2cfe01d6&scoped=true&\"\nimport script from \"./Cate.vue?vue&type=script&lang=js&\"\nexport * from \"./Cate.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Cate.vue?vue&type=style&index=0&id=2cfe01d6&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2cfe01d6\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"参数列表\")])],1),_c('el-card',[_c('el-alert',{attrs:{\"show-icon\":\"\",\"title\":\"注意：只允许为第三级分类设置相关参数！\",\"type\":\"warning\",\"closable\":false}}),_c('el-row',{staticClass:\"cat_opt\"},[_c('el-col',[_c('span',[_vm._v(\"选择商品分类：\")]),_c('el-cascader',{attrs:{\"expand-trigger\":\"hover\",\"options\":_vm.catelist,\"props\":_vm.cateProps},on:{\"change\":_vm.handleChange},model:{value:(_vm.selectedCateKeys),callback:function ($$v) {_vm.selectedCateKeys=$$v},expression:\"selectedCateKeys\"}})],1)],1),_c('el-tabs',{on:{\"tab-click\":_vm.handleTabClick},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"动态参数\",\"name\":\"many\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible=true}}},[_vm._v(\"添加参数\")]),_c('el-table',{attrs:{\"data\":_vm.manyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClose(i, scope.row)}}},[_vm._v(_vm._s(item))])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"label\":\"参数名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"静态属性\",\"name\":\"only\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible=true}}},[_vm._v(\"添加属性\")]),_c('el-table',{attrs:{\"data\":_vm.onlyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClose(i, scope.row)}}},[_vm._v(_vm._s(item))])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"label\":\"属性名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1)],1),_c('el-dialog',{attrs:{\"title\":'添加' + _vm.titleText,\"visible\":_vm.addDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addDialogVisible=$event},\"close\":_vm.addDialogClosed}},[_c('el-form',{ref:\"addFormRef\",attrs:{\"model\":_vm.addForm,\"rules\":_vm.addFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.addForm.attr_name),callback:function ($$v) {_vm.$set(_vm.addForm, \"attr_name\", $$v)},expression:\"addForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addParams}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":'修改' + _vm.titleText,\"visible\":_vm.editDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editDialogVisible=$event},\"close\":_vm.editDialogClosed}},[_c('el-form',{ref:\"editFormRef\",attrs:{\"model\":_vm.editForm,\"rules\":_vm.editFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.editForm.attr_name),callback:function ($$v) {_vm.$set(_vm.editForm, \"attr_name\", $$v)},expression:\"editForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editParams}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>参数列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n      <!-- 警告区域 -->\r\n      <el-alert show-icon title=\"注意：只允许为第三级分类设置相关参数！\" type=\"warning\" :closable=\"false\"></el-alert>\r\n\r\n      <!-- 选择商品分类区域 -->\r\n      <el-row class=\"cat_opt\">\r\n        <el-col>\r\n          <span>选择商品分类：</span>\r\n          <!-- 选择商品分类的级联选择框 -->\r\n          <el-cascader expand-trigger=\"hover\" :options=\"catelist\" :props=\"cateProps\" v-model=\"selectedCateKeys\" @change=\"handleChange\">\r\n          </el-cascader>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!-- tab 页签区域 -->\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n        <!-- 添加动态参数的面板 -->\r\n        <el-tab-pane label=\"动态参数\" name=\"many\">\r\n          <!-- 添加参数的按钮 -->\r\n          <el-button type=\"primary\" size=\"mini\" :disabled=\"isBtnDisabled\" @click=\"addDialogVisible=true\">添加参数</el-button>\r\n          <!-- 动态参数表格 -->\r\n          <el-table :data=\"manyTableData\" border stripe>\r\n            <!-- 展开行 -->\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n                <!-- 循环渲染Tag标签 -->\r\n                <el-tag v-for=\"(item, i) in scope.row.attr_vals\" :key=\"i\" closable @close=\"handleClose(i, scope.row)\">{{item}}</el-tag>\r\n                <!-- 输入的文本框 -->\r\n                <el-input class=\"input-new-tag\" v-if=\"scope.row.inputVisible\" v-model=\"scope.row.inputValue\" ref=\"saveTagInput\" size=\"small\" @keyup.enter.native=\"handleInputConfirm(scope.row)\" @blur=\"handleInputConfirm(scope.row)\">\r\n                </el-input>\r\n                <!-- 添加按钮 -->\r\n                <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(scope.row)\">+ New Tag</el-button>\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 索引列 -->\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"参数名称\" prop=\"attr_name\"></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\" @click=\"showEditDialog(scope.row.attr_id)\">编辑</el-button>\r\n                <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\" @click=\"removeParams(scope.row.attr_id)\">删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <!-- 添加静态属性的面板 -->\r\n        <el-tab-pane label=\"静态属性\" name=\"only\">\r\n          <!-- 添加属性的按钮 -->\r\n          <el-button type=\"primary\" size=\"mini\" :disabled=\"isBtnDisabled\" @click=\"addDialogVisible=true\">添加属性</el-button>\r\n          <!-- 静态属性表格 -->\r\n          <el-table :data=\"onlyTableData\" border stripe>\r\n            <!-- 展开行 -->\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n                <!-- 循环渲染Tag标签 -->\r\n                <el-tag v-for=\"(item, i) in scope.row.attr_vals\" :key=\"i\" closable @close=\"handleClose(i, scope.row)\">{{item}}</el-tag>\r\n                <!-- 输入的文本框 -->\r\n                <el-input class=\"input-new-tag\" v-if=\"scope.row.inputVisible\" v-model=\"scope.row.inputValue\" ref=\"saveTagInput\" size=\"small\" @keyup.enter.native=\"handleInputConfirm(scope.row)\" @blur=\"handleInputConfirm(scope.row)\">\r\n                </el-input>\r\n                <!-- 添加按钮 -->\r\n                <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(scope.row)\">+ New Tag</el-button>\r\n              </template>\r\n            </el-table-column>\r\n            <!-- 索引列 -->\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column label=\"属性名称\" prop=\"attr_name\"></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\" @click=\"showEditDialog(scope.row.attr_id)\">编辑</el-button>\r\n                <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\" @click=\"removeParams(scope.row.attr_id)\">删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n\r\n    <!-- 添加参数的对话框 -->\r\n    <el-dialog :title=\"'添加' + titleText\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\r\n      <!-- 添加参数的对话框 -->\r\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"addForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 修改参数的对话框 -->\r\n    <el-dialog :title=\"'修改' + titleText\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editDialogClosed\">\r\n      <!-- 添加参数的对话框 -->\r\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"editForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 商品分类列表\r\n      catelist: [],\r\n      // 级联选择框的配置对象\r\n      cateProps: {\r\n        value: 'cat_id',\r\n        label: 'cat_name',\r\n        children: 'children'\r\n      },\r\n      // 级联选择框双向绑定到的数组\r\n      selectedCateKeys: [],\r\n      // 被激活的页签的名称\r\n      activeName: 'many',\r\n      // 动态参数的数据\r\n      manyTableData: [],\r\n      // 静态属性的数据\r\n      onlyTableData: [],\r\n      // 控制添加对话框的显示与隐藏\r\n      addDialogVisible: false,\r\n      // 添加参数的表单数据对象\r\n      addForm: {\r\n        attr_name: ''\r\n      },\r\n      // 添加表单的验证规则对象\r\n      addFormRules: {\r\n        attr_name: [\r\n          { required: true, message: '请输入参数名称', trigger: 'blur' }\r\n        ]\r\n      },\r\n      // 控制修改对话框的显示与隐藏\r\n      editDialogVisible: false,\r\n      // 修改的表单数据对象\r\n      editForm: {},\r\n      // 修改表单的验证规则对象\r\n      editFormRules: {\r\n        attr_name: [\r\n          { required: true, message: '请输入参数名称', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getCateList()\r\n  },\r\n  methods: {\r\n    // 获取所有的商品分类列表\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get('categories')\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取商品分类失败！')\r\n      }\r\n\r\n      this.catelist = res.data\r\n\r\n      // console.log(this.catelist)\r\n    },\r\n    // 级联选择框选中项变化，会触发这个函数\r\n    handleChange() {\r\n      this.getParamsData()\r\n    },\r\n    // tab 页签点击事件的处理函数\r\n    handleTabClick() {\r\n      // console.log(this.activeName)\r\n      this.getParamsData()\r\n    },\r\n    // 获取参数的列表数据\r\n    async getParamsData() {\r\n      // 证明选中的不是三级分类\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        this.selectedCateKeys = []\r\n        this.manyTableData = []\r\n        this.onlyTableData = []\r\n        return\r\n      }\r\n\r\n      // 证明选中的是三级分类\r\n      // console.log(this.selectedCateKeys)\r\n      // 根据所选分类的Id，和当前所处的面板，获取对应的参数\r\n      const { data: res } = await this.$http.get(\r\n          `categories/${this.cateId}/attributes`,\r\n          {\r\n            params: { sel: this.activeName }\r\n          }\r\n      )\r\n\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取参数列表失败！')\r\n      }\r\n\r\n      res.data.forEach(item => {\r\n        item.attr_vals = item.attr_vals ? item.attr_vals.split(',') : []\r\n        // 控制文本框的显示与隐藏\r\n        item.inputVisible = false\r\n        // 文本框中输入的值\r\n        item.inputValue = ''\r\n      })\r\n\r\n      // console.log(res.data)\r\n      if (this.activeName === 'many') {\r\n        this.manyTableData = res.data\r\n      } else {\r\n        this.onlyTableData = res.data\r\n      }\r\n    },\r\n    // 监听添加对话框的关闭事件\r\n    addDialogClosed() {\r\n      this.$refs.addFormRef.resetFields()\r\n    },\r\n    // 点击按钮，添加参数\r\n    addParams() {\r\n      this.$refs.addFormRef.validate(async valid => {\r\n        if (!valid) return\r\n        const { data: res } = await this.$http.post(\r\n            `categories/${this.cateId}/attributes`,\r\n            {\r\n              attr_name: this.addForm.attr_name,\r\n              attr_sel: this.activeName\r\n            }\r\n        )\r\n\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error('添加参数失败！')\r\n        }\r\n\r\n        this.$message.success('添加参数成功！')\r\n        this.addDialogVisible = false\r\n        this.getParamsData()\r\n      })\r\n    },\r\n    // 点击按钮，展示修改的对话框\r\n    async showEditDialog(attrId) {\r\n      // 查询当前参数的信息\r\n      const { data: res } = await this.$http.get(\r\n          `categories/${this.cateId}/attributes/${attrId}`,\r\n          {\r\n            params: { attr_sel: this.activeName }\r\n          }\r\n      )\r\n\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取参数信息失败！')\r\n      }\r\n\r\n      this.editForm = res.data\r\n      this.editDialogVisible = true\r\n    },\r\n    // 重置修改的表单\r\n    editDialogClosed() {\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    // 点击按钮，修改参数信息\r\n    editParams() {\r\n      this.$refs.editFormRef.validate(async valid => {\r\n        if (!valid) return\r\n        const { data: res } = await this.$http.put(\r\n            `categories/${this.cateId}/attributes/${this.editForm.attr_id}`,\r\n            { attr_name: this.editForm.attr_name, attr_sel: this.activeName }\r\n        )\r\n\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('修改参数失败！')\r\n        }\r\n\r\n        this.$message.success('修改参数成功！')\r\n        this.getParamsData()\r\n        this.editDialogVisible = false\r\n      })\r\n    },\r\n    // 根据Id删除对应的参数项\r\n    async removeParams(attrId) {\r\n      const confirmResult = await this.$confirm(\r\n          '此操作将永久删除该参数, 是否继续?',\r\n          '提示',\r\n          {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }\r\n      ).catch(err => err)\r\n\r\n      // 用户取消了删除的操作\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消删除！')\r\n      }\r\n\r\n      // 删除的业务逻辑\r\n      const { data: res } = await this.$http.delete(\r\n          `categories/${this.cateId}/attributes/${attrId}`\r\n      )\r\n\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('删除参数失败！')\r\n      }\r\n\r\n      this.$message.success('删除参数成功！')\r\n      this.getParamsData()\r\n    },\r\n    // 文本框失去焦点，或摁下了 Enter 都会触发\r\n    async handleInputConfirm(row) {\r\n      if (row.inputValue.trim().length === 0) {\r\n        row.inputValue = ''\r\n        row.inputVisible = false\r\n        return\r\n      }\r\n      // 如果没有return，则证明输入的内容，需要做后续处理\r\n      row.attr_vals.push(row.inputValue.trim())\r\n      row.inputValue = ''\r\n      row.inputVisible = false\r\n      // 需要发起请求，保存这次操作\r\n      this.saveAttrVals(row)\r\n    },\r\n    // 将对 attr_vals 的操作，保存到数据库\r\n    async saveAttrVals(row) {\r\n      // 需要发起请求，保存这次操作\r\n      const { data: res } = await this.$http.put(\r\n          `categories/${this.cateId}/attributes/${row.attr_id}`,\r\n          {\r\n            attr_name: row.attr_name,\r\n            attr_sel: row.attr_sel,\r\n            attr_vals: row.attr_vals.join(',')\r\n          }\r\n      )\r\n\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('修改参数项失败！')\r\n      }\r\n\r\n      this.$message.success('修改参数项成功！')\r\n    },\r\n    // 点击按钮，展示文本输入框\r\n    showInput(row) {\r\n      row.inputVisible = true\r\n      // 让文本框自动获得焦点\r\n      // $nextTick 方法的作用，就是当页面上元素被重新渲染之后，才会指定回调函数中的代码\r\n      this.$nextTick(() => {\r\n      // this.$nextTick( _ => {\r\n        this.$refs.saveTagInput.$refs.input.focus()\r\n      })\r\n    },\r\n    // 删除对应的参数可选项\r\n    handleClose(i, row) {\r\n      row.attr_vals.splice(i, 1)\r\n      this.saveAttrVals(row)\r\n    }\r\n  },\r\n  computed: {\r\n    // 如果按钮需要被禁用，则返回true，否则返回false\r\n    isBtnDisabled() {\r\n      return this.selectedCateKeys.length !== 3;\r\n\r\n    },\r\n    // 当前选中的三级分类的Id\r\n    cateId() {\r\n      if (this.selectedCateKeys.length === 3) {\r\n        return this.selectedCateKeys[2]\r\n      }\r\n      return null\r\n    },\r\n    // 动态计算标题的文本\r\n    titleText() {\r\n      if (this.activeName === 'many') {\r\n        return '动态参数'\r\n      }\r\n      return '静态属性'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.cat_opt {\r\n  margin: 15px 0;\r\n}\r\n\r\n.el-tag {\r\n  margin: 10px;\r\n}\r\n\r\n.input-new-tag {\r\n  width: 120px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Params.vue?vue&type=template&id=9c2afc4a&scoped=true&\"\nimport script from \"./Params.vue?vue&type=script&lang=js&\"\nexport * from \"./Params.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Params.vue?vue&type=style&index=0&id=9c2afc4a&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9c2afc4a\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","path","_v","on","showAddCateDialog","staticClass","catelist","columns","scopedSlots","_u","key","fn","scope","row","cat_deleted","staticStyle","cat_level","slot","querInfo","pagenum","pagesize","total","handleSizeChange","handleCurrentChange","addCateDialogVisible","$event","addCateDialogClosed","ref","addCateForm","addCateFormRules","model","value","cat_name","callback","$$v","$set","expression","parentCateList","cascaderProps","parentCateChanged","selectedKeys","addCate","staticRenderFns","name","data","type","label","prop","template","cat_pid","required","message","trigger","children","created","methods","params","component","cateProps","handleChange","selectedCateKeys","handleTabClick","activeName","isBtnDisabled","addDialogVisible","manyTableData","_l","attr_vals","item","i","handleClose","_s","inputVisible","handleInputConfirm","nativeOn","indexOf","_k","keyCode","inputValue","showInput","showEditDialog","attr_id","removeParams","onlyTableData","titleText","addDialogClosed","addForm","addFormRules","attr_name","addParams","editDialogVisible","editDialogClosed","editForm","editFormRules","editParams","sel","res","attr_sel","confirmButtonText","cancelButtonText","catch","err","computed","cateId"],"sourceRoot":""}